#!/bin/bash
#PBS -N ctv_equ
#PBS -o pbs.out
#PBS -e pbs.err
#PBS -j oe
#PBS -l nodes=mordor:ppn=1:gpus=1
#PBS -l walltime=1000:00:00

#################################################################
############### Write your code here ############################
#################################################################

# Running AMBER
export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/usr/local/cuda-8.0/lib64
export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/opt/intel/composer_xe_2013.3.163/compiler/lib/intel64
export AMBERHOME=/apps/amber16
export MDEXE=$AMBERHOME/bin/pmemd.cuda

i=0
starting_mdin=/scratch/pbarletta/cph_obp/run/ctv/mhe/e/0equ.in
prmtop=/scratch/pbarletta/cph_obp/top_files/ctv.prmtop

for step in `cat /scratch/pbarletta/cph_obp/run/ctv/mhe/e/step.list`
do

    i=`expr $i + 1`
    k=`expr $i - 1`

    echo "Step:" $i

    if [ $i == 1 ]
    then

        mdin=${i/*/"/scratch/pbarletta/cph_obp/run/ctv/mhe/e/""$i"equ.in}
        mdout=${i/*/"/scratch/pbarletta/cph_obp/run/ctv/mhe/e/""$i"equ.out}
        inpcrd=${i/*/"/scratch/pbarletta/cph_obp/run/ctv/mhe/h/"hctv.rst7}
        restrt=${i/*/"/scratch/pbarletta/cph_obp/run/ctv/mhe/e/""$i"ectv.rst7}
        refc=${i/*/"/scratch/pbarletta/cph_obp/run/ctv/mhe/h/"hctv.rst7}
        mdcrd=${i/*/"/scratch/pbarletta/cph_obp/run/ctv/mhe/e/""$i"ectv.nc}

        cpin=/scratch/pbarletta/cph_obp/top_files/incph_wt_ctv
        cprst=${i/*/"/scratch/pbarletta/cph_obp/run/ctv/mhe/h/""$i"cprst_ctv}
        cpout=${i/*/"/scratch/pbarletta/cph_obp/run/ctv/mhe/h/""$i"cpout_ctv}

        # In this 1st step mdin = starting_mdin
        sed "s/50\.0/${step}/" $starting_mdin > $mdin

        $MDEXE -O -i $mdin -o $mdout -p $prmtop -c $inpcrd -r $restrt -ref $refc -x $mdcrd -cpin $cpin -cprestrt $cprst -cpout $cpout

        echo "Done step:" $i

        continue
    fi

    if [[ $i == 30 || $i == 31 ]]
    then

	mdin=${i/*/"/scratch/pbarletta/cph_obp/run/ctv/mhe/e/"30equ.in}
        mdout=${i/*/"/scratch/pbarletta/cph_obp/run/ctv/mhe/e/""$i"equ.out}
        prmtop=${i/*/"/scratch/pbarletta/cph_obp/top_files/"ctv.prmtop}
        inpcrd=${i/*/"/scratch/pbarletta/cph_obp/run/ctv/mhe/e/""$k"ectv.rst7}
        restrt=${i/*/"/scratch/pbarletta/cph_obp/run/ctv/mhe/e/""$i"ectv.rst7}
        mdcrd=${i/*/"/scratch/pbarletta/cph_obp/run/ctv/mhe/e/""$i"ectv.nc}

        cprst=${i/*/"/scratch/pbarletta/cph_obp/run/ctv/mhe/h/""$i"cprst_ctv}
        cpout=${i/*/"/scratch/pbarletta/cph_obp/run/ctv/mhe/h/""$i"cpout_ctv}
        cpin=${i/*/"/scratch/pbarletta/cph_obp/run/ctv/mhe/h/""$k"cpout_ctv}
 
        $MDEXE -O -i $mdin -o $mdout -p $prmtop -c $inpcrd -r $restrt -x $mdcrd -cpin $cpin -cprestrt $cprst -cpout $cpout

        echo "Done single step:" $i

	continue
    fi

    mdin=${i/*/"/scratch/pbarletta/cph_obp/run/ctv/mhe/e/""$i"equ.in}
    mdout=${i/*/"/scratch/pbarletta/cph_obp/run/ctv/mhe/e/""$i"equ.out}
    prmtop=${i/*/"/scratch/pbarletta/cph_obp/top_files/"ctv.prmtop}
    inpcrd=${i/*/"/scratch/pbarletta/cph_obp/run/ctv/mhe/e/""$k"ectv.rst7}
    restrt=${i/*/"/scratch/pbarletta/cph_obp/run/ctv/mhe/e/""$i"ectv.rst7}
    refc=${i/*/"/scratch/pbarletta/cph_obp/run/ctv/mhe/e/""$k"ectv.rst7}
    mdcrd=${i/*/"/scratch/pbarletta/cph_obp/run/ctv/mhe/e/""$i"ectv.nc}

    cprst=${i/*/"/scratch/pbarletta/cph_obp/run/ctv/mhe/h/""$i"cprst_ctv}
    cpout=${i/*/"/scratch/pbarletta/cph_obp/run/ctv/mhe/h/""$i"cpout_ctv}
    cpin=${i/*/"/scratch/pbarletta/cph_obp/run/ctv/mhe/h/""$k"cpin_ctv}


    sed "s/50\.0/${step}/" $starting_mdin > $mdin

    $MDEXE -O -i $mdin -o $mdout -p $prmtop -c $inpcrd -r $restrt -ref $refc -x $mdcrd -cpin $cpin -cprestrt $cprst -cpout $cpout

    echo "Done step:" $i
done

#################################################################
#################################################################

# Copying files back, in case it is needed
if [ "$PBS_O_HOST" != "$HOSTNAME" ]; then
 ######## Specify the output files you need to copy here ########
 cp * /nodes/$PBS_O_HOST/$PBS_O_WORKDIR/.
 ################################################################
 cd ..
 rm -R temp_$PBS_JOBID
fi
